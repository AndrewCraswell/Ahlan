!function(){"use strict";function configure($locationProvider,$compileProvider,$urlMatcherFactoryProvider){$locationProvider.html5Mode(!0),$compileProvider.debugInfoEnabled(!1),$urlMatcherFactoryProvider.strictMode(!1)}angular.module("app").config(configure),configure.$inject=["$locationProvider","$compileProvider","$urlMatcherFactoryProvider"]}(),function(){"use strict";angular.module("app",["ionic","app.service.core","app.services.data","app.pages.errors"])}(),function(){"use strict";function routes($stateProvider,appConstants){var _states=appConstants.StateNames;$stateProvider.state(_states.APP,{abstract:!0,template:"<ui-view/>"})}angular.module("app").config(routes),routes.$inject=["$stateProvider","appConstants"]}(),function(){"use strict";function executeBootstrap($rootScope,base){$rootScope.$on("$stateChangeSuccess",function(){document.body.scrollTop=0,document.documentElement.scrollTop=0})}angular.module("app").run(executeBootstrap),executeBootstrap.$inject=["$rootScope","base"]}(),function(){"use strict";function ErrorPageController($state,$stateParams,base){var ctrl=this;ctrl.data={heading:$stateParams.heading||$state.current.data.defaultHeading,description:$stateParams.description||$state.current.data.defaultDescription,error:$stateParams.error},ctrl.data&&ctrl.data.error&&console.warn(ctrl.data.error)}angular.module("app.pages.errors").controller("ErrorPageController",ErrorPageController),ErrorPageController.$inject=["$state","$stateParams","base"]}(),function(){"use strict";angular.module("app.pages.errors",["ui.router","app..services.core"])}(),function(){"use strict";function config($stateProvider,$urlRouterProvider,appConstants){var _states=appConstants.StateNames;$stateProvider.state(_states.ERROR_UNEXPECTED,{url:"/error",templateUrl:"error.tpl.html",controller:"ErrorPageController",controllerAs:"erpc",data:{defaultHeading:"The page has encountered an unexpected error.",defaultDescription:["It seems something has gone wrong.","The issue has been logged, and we apologize for the inconvenience."].join(" ")},params:{heading:null,description:null,error:null}}).state(_states.ERROR_404,{url:"/404",templateUrl:"error.tpl.html",controller:"ErrorPageController",controllerAs:"erpc",data:{defaultHeading:"We are sorry, the page you requested cannot be found.",defaultDescription:"The URL may be misspelled or the page you're looking for is no longer available."},params:{heading:null,description:null,requestId:null}}),$urlRouterProvider.otherwise(function($injector){$injector.get("$state").go(_states.ERROR_404,{},{location:!1})})}angular.module("app.pages.errors").config(config),config.$inject=["$stateProvider","$urlRouterProvider","appConstants"]}(),function(){"use strict";angular.module("app.services.core").constant("appConstants",Object.freeze({StateNames:{APP:"app",ERROR_UNEXPECTED:"app.unexpected-error",ERROR_404:"404"},StorageType:{MEMORY:"memory",SESSION_STORAGE:"sessionStorage",LOCAL_STORAGE:"localStorage"}}))}(),function(){"use strict";function base($state,appConstants){function isRequestSuccessful(response){return response.status>=200&&response.status<300||304===response.status}var service={handleRequestError:function(response){isRequestSuccessful(response)||response.status}};return service.common={appConstants:appConstants},service}angular.module("app.services.core").factory("base",base),base.$inject=["$state","appConstants"]}(),function(){"use strict";describe("Base Provider",function(){beforeEach(module("app.services.core"))})}(),function(){"use strict";angular.module("app.services.core",["ionic"])}(),function(){"use strict";angular.module("app.services.core")}(),function(){"use strict";function $stateDecorator($delegate,$injector,$rootScope){return function(){var $state=$delegate;return $state.previous=void 0,$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){$state.previous={state:fromState,stateParams:fromParams}}),$state}()}angular.module("app.services.core").decorator("$state",$stateDecorator),$stateDecorator.$inject=["$delegate","$injector","$rootScope"]}(),function(){"use strict";angular.module("app.services.data",["app.services.core","angular-cache"])}(),function(){"use strict";function datacontext($injector,base){function defineLazyLoadedRepos(){_repoNames.forEach(function(name){Object.defineProperty(service,name,{configurable:!0,get:function(){var repo=getRepo(name);return Object.defineProperty(service,name,{value:repo,configurable:!1,enumerable:!0}),repo}})})}function getRepo(repoName){var fullRepoName="repository."+repoName;return new($injector.get(fullRepoName))}var _repoNames=["example"],service={};return defineLazyLoadedRepos(),service}angular.module("app.services.data").factory("datacontext",datacontext),datacontext.$inject=["$injector","base"]}(),function(){"use strict";describe("DataContext Service",function(){beforeEach(module("app.services.data"))})}(),function(){"use strict";function AbstractRepository($q,$http,base,requestFlattener,CacheFactory){function Ctor(){this._serviceBaseUrl="https://"+base.common.appSettings.microsoftAcademyServiceBaseUrl}return Ctor.extend=function(repoCtor){repoCtor.prototype=new Ctor,repoCtor.prototype.constructor=repoCtor},Ctor.prototype={constructor:Ctor,_execute:function(requestConfig,forceRefresh,skipErrorHandling){var defer=$q.defer();forceRefresh&&requestConfig.cache&&requestConfig.url&&requestConfig.cache.remove(requestConfig.url);var flattenedRequest=requestFlattener.flatten(requestConfig,defer.promise);return 1===flattenedRequest.count&&$http(requestConfig).then(function(response){defer.resolve(response.data)},function(error){defer.reject(error),skipErrorHandling||base.common.insights.logException(error)}),flattenedRequest.promise},_getCache:function(name,storageType){var cacheIdentifier=name+"_"+storageType;return CacheFactory.get(cacheIdentifier)?CacheFactory.get(cacheIdentifier):CacheFactory.createCache(cacheIdentifier,{storageMode:storageType,storagePrefix:""})},_clearCache:function(name){for(var caches=CacheFactory.keys(),i=0;i<caches.length;i++)0===caches[i].lastIndexOf(name,0)&&CacheFactory.get(caches[i]).destroy()}},Ctor}angular.module("app.services.data").factory("repository.abstract",AbstractRepository),AbstractRepository.$inject=["$q","$http","base","requestFlattener","CacheFactory"]}(),function(){"use strict";function exampleRepository(base,AbstractRepository){function Ctor(){this.getExampleData=getExampleData,this.clearCache=clearCache,this.getCache=getCache}function getExampleData(){var requestConfig={method:"GET",url:_apiUrl};return this._execute(requestConfig)}function clearCache(){this._clearCache(serviceId)}function getCache(storageType){return this._getCache(serviceId,storageType)}base.common.appConstants.StorageType;var _apiUrl="api/v1.0/example/";return AbstractRepository.extend(Ctor),Ctor}var serviceId="repository.example";angular.module("app.services.data").factory(serviceId,exampleRepository),exampleRepository.$inject=["base","repository.abstract"]}(),function(){"use strict";function requestFlattener(base,requestHasher){function addRunningRequest(id,promise){return getRunningRequest(id)?_runningRequests[id].count++:_runningRequests[id]={id:id,promise:promise,count:1},getRunningRequest(id)}function getRunningRequest(id){return _runningRequests[id]}function removeRunningRequest(id){delete _runningRequests[id]}var _runningRequests=[];return{flatten:function(config,promise){var hash=requestHasher.getHash(config),flattened=addRunningRequest(hash,promise);return 1===flattened.count&&promise.finally(function(){removeRunningRequest(hash)}),flattened}}}angular.module("app.services.data").factory("requestFlattener",requestFlattener),requestFlattener.$inject=["base","requestHasher"]}(),describe("Request Flattener Service",function(){"use strict";var requestFlattener,$http,$q,$httpBackend;beforeEach(module("app.services.data")),beforeEach(inject(function(_requestFlattener_,_$http_,_$q_,_$httpBackend_){requestFlattener=_requestFlattener_,$http=_$http_,$q=_$q_,$httpBackend=_$httpBackend_})),afterEach(function(){}),it("should flatten the request",function(){var requestConfig={method:"GET",url:"http://foo"};$httpBackend.expect("GET","http://foo").respond(200,{});var defer=$q.defer(),flattenedRequest=requestFlattener.flatten(requestConfig,defer.promise);$http(requestConfig),expect(flattenedRequest.count).toEqual(1);flattenedRequest=requestFlattener.flatten(requestConfig,defer.promise);$http(requestConfig),expect(flattenedRequest.count).toEqual(2),defer.resolve({})})}),function(){"use strict";angular.module("app.services.data").service("requestHasher",function(){function hash(str){var h=0,strlen=str.length;if(0===strlen)return h;for(var i=0;i<strlen;++i)h=(h<<5)-h+str.charCodeAt(i),h&=h;return h>>>0}this.getHash=function(config){var str=config.method+config.url;return config.params&&(str+=angular.toJson(config.params)),config.data&&(str+=angular.toJson(config.data)),hash(str)}})}(),describe("Request Hasher Service",function(){"use strict";var requestHasher;beforeEach(module("app.services.data")),beforeEach(inject(function(_requestHasher_){requestHasher=_requestHasher_})),it("should get hash",function(){var requestConfig={method:"GET",url:"http://foo",params:{name:"test"}},hash1=requestHasher.getHash(requestConfig),hash2=requestHasher.getHash(requestConfig);expect(hash1).toEqual(hash2)}),it("should hash empty to zero",function(){var requestConfig={method:"",url:""},hash=requestHasher.getHash(requestConfig);expect(hash).toEqual(0)})});